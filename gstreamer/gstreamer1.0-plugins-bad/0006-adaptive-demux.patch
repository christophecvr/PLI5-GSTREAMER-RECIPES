From 36d8e41a211675840ad049ba2009db4effbd0361 Mon Sep 17 00:00:00 2001
From: Alex Ashley <bugzilla@ashley-family.net>
Date: Fri, 29 Apr 2016 12:31:01 +0100
Subject: [PATCH] adaptivedemux: unschedule clock callback when tasks are
 ending

The gst_adaptive_demux_wait_until() function can be woken up either
by its end_time being reached, or from other threads that want to
interrupt the waiting thread.

If the thread is interrupted, it needs to cancel its async clock callback.

    https://bugzilla.gnome.org/show_bug.cgi?id=765728
---
 gst-libs/gst/adaptivedemux/gstadaptivedemux.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/gst-libs/gst/adaptivedemux/gstadaptivedemux.c b/gst-libs/gst/adaptivedemux/gstadaptivedemux.c
index 9c2bb44..7708b39 100644
--- a/gst-libs/gst/adaptivedemux/gstadaptivedemux.c
+++ b/gst-libs/gst/adaptivedemux/gstadaptivedemux.c
@@ -3528,9 +3528,12 @@ gst_adaptive_demux_wait_until (GstClock * clock, GCond * cond, GMutex * mutex,
     gst_clock_id_unref (timer.clock_id);
     g_return_val_if_reached (TRUE);
   }
+  g_assert (!timer.fired);
   /* the gst_adaptive_demux_clock_callback will signal the
      cond when the clock's single shot timer fires */
   g_cond_wait (cond, mutex);
+  if (!timer.fired)
+    gst_clock_id_unschedule (timer.clock_id);
   gst_clock_id_unref (timer.clock_id);
   return !timer.fired;
 }
-- 
2.3.0
